# Varnish Frontend Configuration Template
# This template creates SSL termination that forwards to Varnish Cache
# Architecture: Client → Nginx SSL (443) → Varnish (6081) → Nginx Backend (8080)

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_NAME www.DOMAIN_NAME;
    
    return 301 https://$server_name$request_uri;
}

# HTTPS SSL Termination - Forward to Varnish
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_NAME www.DOMAIN_NAME;
    
    # SSL Configuration
    ssl_certificate SSL_CERT_PATH;
    ssl_certificate_key SSL_KEY_PATH;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    
    # Forward all requests to Varnish
    location / {
        proxy_pass http://127.0.0.1:6081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Proxy timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Add cache status header from Varnish
        add_header X-Cache-Status $upstream_http_x_cache always;
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Cache purge endpoint (restricted access)    location ~ ^/varnish-purge(/.*) {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        # Send PURGE request to Varnish
        proxy_pass http://127.0.0.1:6081$1;
        proxy_method PURGE;
        proxy_set_header Host $host;
        proxy_set_header X-Purge-Method "PURGE";
    }
}{
        proxy_pass http://127.0.0.1:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        
        # SSL specific headers
        proxy_set_header X-Forwarded-Ssl on;
    }
    
    # Varnish cache purge endpoint (only from localhost)
    location ~ /varnish-purge(/.*) {
        allow 127.0.0.1;
        deny all;
        
        proxy_pass http://127.0.0.1:8080$1;
        proxy_method PURGE;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }
}
